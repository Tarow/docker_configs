version: "3.4"

services:
  broker:
    container_name: paperless-redis
    image: redis:6.0
    restart: unless-stopped

  db:
    container_name: paperless-db
    image: postgres:13
    restart: unless-stopped
    volumes:
      - ./db:/var/lib/postgresql/data
    env_file:
      - db.env
    # Variables defined in db.env:
    #  POSTGRES_DB=
    #  POSTGRES_USER=
    #  POSTGRES_PASSWORD=

  paperless-ngx:
    container_name: paperless-ngx
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    restart: unless-stopped
    depends_on:
      - db
      - broker
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - ./data:/usr/src/paperless/data
      - ./media:/usr/src/paperless/media
      - ./export:/usr/src/paperless/export
      - ./consume:/usr/src/paperless/consume
    env_file:
      - paperless.env
    #  Variables defined in paperless.env:
    #  PAPERLESS_REDIS=
    #  PAPERLESS_DBHOST=
    #  USERMAP_UID=
    #  USERMAP_GID=
    #  PAPERLESS_OCR_LANGUAGES=
    #  PAPERLESS_SECRET_KEY=
    #  PAPERLESS_TIME_ZONE=
    #  PAPERLESS_OCR_LANGUAGE=
    #  PAPERLESS_FILENAME_FORMAT=
    #  PAPERLESS_URL=
    networks:
      - traefik-proxy
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.paperless.rule=Host(`paperless.ntasler.de`)"
      - "traefik.http.routers.paperless.entrypoints=websecure"
      - "traefik.http.routers.paperless.middlewares=private-chain@file"
      - "traefik.http.services.paperless.loadbalancer.server.port=8000"

networks:
  traefik-proxy:
    external: true
