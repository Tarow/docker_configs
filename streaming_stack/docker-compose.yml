version: "3"
services:
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    restart: unless-stopped
    ports:
      - 8888:8888 # HTTP Proxy
    networks:
      - traefik-proxy
    volumes:
       - ./gluetun_config:/gluetun
    env_file:
      - gluetun.env
    # Variables defined in gluetun.env:
    # WIREGUARD_PRIVATE_KEY=
    # WIREGUARD_ADDRESSES=
    # FIREWALL_VPN_INPUT_PORTS=
    environment:
      - VPN_SERVICE_PROVIDER=mullvad
      - VPN_TYPE=wireguard
#      - SERVER_CITIES=Zurich
      - TZ=Europe/Berlin
      - HTTPPROXY=on
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.gluetun.rule=Host(`gluetun.ntasler.de`)"
      - "traefik.http.routers.gluetun.entrypoints=websecure"
      - "traefik.http.routers.gluetun.service=gluetun"
      - "traefik.http.services.gluetun.loadbalancer.server.port=8000"

      - "traefik.http.routers.qbittorrent.rule=Host(`qbittorrent.ntasler.de`)"
      - "traefik.http.routers.qbittorrent.entrypoints=websecure"
      - "traefik.http.routers.qbittorrent.service=qbittorrent"
      - "traefik.http.services.qbittorrent.loadbalancer.server.port=8080"

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
      - JELLYFIN_PublishedServerUrl=jellyfin.ntasler.de
    volumes:
      - ./jellyfin_config:/config
      - /mnt/hdd1/media:/media
    devices:
      - /dev/dri:/dev/dri
    ports:
      - 7359:7359/udp # Local network discovery
      - 1900:1900/udp # DLNA discovery
    restart: unless-stopped
    networks:
      - traefik-proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyfin.rule=Host(`jellyfin.ntasler.de`)"
      - "traefik.http.routers.jellyfin.entrypoints=websecure"
      - "traefik.http.routers.jellyfin.tls.certresolver=letsencrypt"
      - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"
      - "traefik.docker.network=traefik-proxy"  

  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
    volumes:
      - ./sonarr_config:/config
      - /mnt/hdd1/media:/media
    restart: unless-stopped
    networks:
      - traefik-proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.ntasler.de`)"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.routers.sonarr.tls.certresolver=letsencrypt"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
      - "traefik.docker.network=traefik-proxy"

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
    volumes:
      - ./radarr_config:/config
      - /mnt/hdd1/media:/media
    restart: unless-stopped
    networks:
      - traefik-proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`radarr.ntasler.de`)"
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - "traefik.http.routers.radarr.tls.certresolver=letsencrypt"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
      - "traefik.docker.network=traefik-proxy"

  bazarr:
    image: linuxserver/bazarr
    container_name: bazarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
    volumes:
      - ./bazarr_config:/config
      - /mnt/hdd1/media:/media
    restart: unless-stopped
    networks:
      - traefik-proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bazarr.rule=Host(`bazarr.ntasler.de`)"
      - "traefik.http.routers.bazarr.entrypoints=websecure"
      - "traefik.http.routers.bazarr.tls.certresolver=letsencrypt"
      - "traefik.http.services.bazarr.loadbalancer.server.port=6767"
      - "traefik.docker.network=traefik-proxy"

  jellyseerr:
    image: fallenbagel/jellyseerr
    container_name: jellyseerr
    environment:
      - TZ=Europe/Berlin
    volumes:
      - ./jellyseerr_config:/app/config
    restart: unless-stopped
    depends_on:
      - radarr
      - sonarr
    networks:
      - traefik-proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyseerr.rule=Host(`jellyseerr.ntasler.de`)"
      - "traefik.http.routers.jellyseerr.entrypoints=websecure"
      - "traefik.http.routers.jellyseerr.tls.certresolver=letsencrypt"
      - "traefik.http.services.jellyseerr.loadbalancer.server.port=5055"
      - "traefik.docker.network=traefik-proxy"

  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
    volumes:
      - ./readarr_config:/config
      - /mnt/hdd1/media:/media
    restart: unless-stopped
    networks:
      - traefik-proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.readarr.rule=Host(`readarr.ntasler.de`)"
      - "traefik.http.routers.readarr.entrypoints=websecure"
      - "traefik.http.routers.readarr.tls.certresolver=letsencrypt"
      - "traefik.http.services.readarr.loadbalancer.server.port=8787"
      - "traefik.docker.network=traefik-proxy"

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:develop
    container_name: prowlarr
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    networks:
      - traefik-proxy
    volumes:
      - ./prowlarr_config:/config
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-proxy"
      - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.ntasler.de`)"
      - "traefik.http.routers.prowlarr.entrypoints=websecure"
      - "traefik.http.routers.prowlarr.tls.certresolver=letsencrypt"
      - "traefik.http.routers.prowlarr.service=prowlarr"
      - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"

  qbittorrent:
    container_name: qbittorrent
    image: linuxserver/qbittorrent
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=022
      - WEBUI_PORT=8080
    volumes:
      - ./qbittorrent_config:/config
      - /mnt/hdd1/media:/media
    network_mode: 'service:gluetun'
    depends_on:
      gluetun:
        condition: service_healthy

  qbittorrent-checker:
    build: ./qbittorrent_checker
    container_name: qbittorrent-checker
    restart: unless-stopped

networks:
  traefik-proxy:
    external: true
