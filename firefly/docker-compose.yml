version: '3.3'

services:
  app:
    image: fireflyiii/core:latest
    container_name: firefly_core
    restart: unless-stopped
    volumes:
      - ./upload:/var/www/html/storage/upload
    env_file: .env
    networks:
      - default
      - traefik-proxy
    depends_on:
      - db
    labels:
      - traefik.enable=true
      - traefik.http.routers.firefly.rule=Host(`firefly.ntasler.de`)
      - traefik.http.routers.firefly.entrypoints=websecure
      - traefik.http.routers.firefly.middlewares=private-chain@file
      - traefik.http.services.firefly.loadbalancer.server.port=8080

  db:
    image: mariadb
    container_name: firefly_db
    restart: unless-stopped
    env_file: .db.env
    networks:
      - default
    volumes:
      - ./db_data:/var/lib/mysql

  importer:
    image: fireflyiii/data-importer:latest
    restart: unless-stopped
    container_name: firefly_importer
    networks:
      - default
      - traefik-proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.firefly-importer.rule=Host(`firefly-importer.ntasler.de`)
      - traefik.http.routers.firefly-importer.entrypoints=websecure
      - traefik.http.routers.firefly-importer.middlewares=private-chain@file
      - traefik.http.services.firefly-importer.loadbalancer.server.port=8080
    depends_on:
      - app
    env_file: .importer.env

  fints-importer:
    image: benkl/firefly-iii-fints-importer
    container_name: firefly_fints_importer
    restart: unless-stopped
    volumes:
        - ./fints-importer:/app/configurations
    networks:
      - default
      - traefik-proxy   
    labels:
      - traefik.enable=true
      - traefik.http.routers.firefly-fintsimporter.rule=Host(`firefly-fintsimporter.ntasler.de`)
      - traefik.http.routers.firefly-fintsimporter.entrypoints=websecure
      - traefik.http.routers.firefly-fintsimporter.middlewares=private-chain@file
      - traefik.http.services.firefly-fintsimporter.loadbalancer.server.port=8080
  cron:
    #
    # To make this work, set STATIC_CRON_TOKEN in your .env file or as an environment variable and replace REPLACEME below
    # The STATIC_CRON_TOKEN must be *exactly* 32 characters long
    #
    image: alpine
    restart: unless-stopped
    container_name: firefly_cron
    command: sh -c "echo \"0 3 * * * wget -qO- http://app:8080/api/v1/cron/${STATIC_CRON_TOKEN}\" | crontab - && crond -f -L /dev/stdout"
    networks:
      - default


networks:
  traefik-proxy:
    external: true
