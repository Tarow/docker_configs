version: '3.3'
services:
  drone:
    volumes:
      - './data:/data'
    env_file:
      - drone.env
    restart: always
    container_name: drone
    image: 'drone/drone:2'
   # environment:
     # Variables set in drone.env:
     #- DRONE_GITEA_SERVER=
     #- DRONE_GITEA_CLIENT_ID=
     #- DRONE_GITEA_CLIENT_SECRET=
     #- DRONE_RPC_SECRET=
     #- DRONE_SERVER_HOST=
     #- DRONE_SERVER_PROTO=
    labels:
      - traefik.enable=true
      - traefik.http.routers.drone.entrypoints=websecure
      - traefik.http.routers.drone.middlewares=private-chain@file
      - traefik.http.services.drone.loadbalancer.server.port=80
    networks:
      - traefik-proxy

  drone-runner-docker:
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    env_file:
      - runner-docker.env
    # environment:
     # Variables set in runner-docker.env:
     # DRONE_RPC_PROTO=
     # DRONE_RPC_HOST=
     # DRONE_RPC_SECRET=
     # DRONE_RUNNER_CAPACITY=
     # DRONE_RUNNER_NAME=
    restart: always
    container_name: drone-runner-docker
    image: 'drone/drone-runner-docker:1'

networks:
  traefik-proxy:
    external: true
